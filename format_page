#!/bin/sh

# USAGE: prettyprint <name>
#  reads lines from stdin and wraps them into a nice human-readable page design


function utf8_pad() {
    local bytes=$(wc -c <<<"$1")
    local chars=$(wc -m <<<"$1")
    echo $(( $_pad_full + $bytes - $chars ))
}


# delimiter symbols
_wrap_indicator='↪'
_delim_top='┬'
_delim_int='┼'
_delim_mid='│'
_delim_bot='┴'
_delim_wrap="$_wrap_indicator$_delim_mid"
_div_hrz='─'

# magic numbers
_pad_num=4   # padding for line numbers (must be greater than 0)
_pad_delim=2   # padding for text pane delimiters (must be greater than 0)
_pad_full=$(( $_pad_num + $_pad_delim ))

_pad_top=$(utf8_pad "$_delim_top")
_pad_mid=$(utf8_pad "$_delim_mid")
_pad_int=$(utf8_pad "$_delim_int")
_pad_bot=$(utf8_pad "$_delim_bot")
_pad_wrap=$(utf8_pad "$_delim_wrap")

_term_width=$(tput cols)
_wrap_width=$(( $_term_width - $_pad_full ))

# helper color codes
C_BOLD="$(tput bold)"
C_NORM="$(tput sgr0)"
C_GREY="$(tput setaf 238)"


function format_it() {
    print_div "$_pad_top" "$_delim_top"
    print_val "$_pad_mid" "$_delim_mid" " Source: ${C_BOLD}${_xtool_format_page_source:-$0}"
    print_div "$_pad_int" "$_delim_int"

    local IFS=$'\n'
    while read line
    do
        line="  $line"
        print_val "$_pad_mid" "$_delim_mid" "${line:0:$_wrap_width}" "$(( ++i ))"

        line="${line:$_wrap_width}"
        while [[ -n $line ]]
        do
            print_val "$_pad_wrap" "$_delim_wrap" "$line" 
            line="${line:$_wrap_width}"
        done
    done

    print_div "$_pad_bot" "$_delim_bot"
}

function print_div() {
    local pad="$1" div="$2"

    printf "${C_GREY}"
    for (( i=1; i<=( $pad - 3 ); i++ )); do printf "${_div_hrz}"; done
    printf "$div"
    for (( i=1; i<=( $_term_width - $_pad_full ); i++ )); do printf "${_div_hrz}"; done
    printf "\n"
}
function print_val() {
    local pad="$1" div="$2" val="$3" num="$4"

    printf "${C_GREY}%${_pad_num}s%$(( $pad - $_pad_num ))s${C_NORM}%s\n"    "$num" "$div" "$val"
}


while (($#))
do
    case $1 in
        --source)
            shift
            _xtool_format_page_source="$1"
            ;;
        --)
            shift
            break
            ;;
        --*)
            echo "format_page: invalid argument: $1" >&2
            exit 1
            ;;
    esac

    shift
done

format_it

