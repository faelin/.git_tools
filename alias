#!/bin/sh

# USAGE: git alias <name(s)>
#  print the indicated git alias

while (( $# ))
do
    case $1 in
        --all|-a)
            _xtool_alias_print=1
            items+=( $(git config --includes --get-regexp --name-only '^alias\.' ) )
            ;;
        --no-deps)
            _xtool_alias_no_deps=1
            ;;
        --print|-p)
            _xtool_alias_print=1
            ;;
        --pager)
            shift
            _xtool_pager="$1"
            ;;
        --)
            shift
            items+=( "$@" )
            break
            ;;
        *)
            items+=( "$1" )
            ;;
    esac
    shift
done

for name in "${items[@]}"
do
    name="${name#alias.}";
    body="$(git config --includes --show-origin --get "alias.${name}")"
    [[ -z "$body" ]] && echo "no such alias: $name" && exit 1
    
    body="$(sed -e 's/^file:\([^ ]*\)\t/\1\n/' <<<"$body")"
    source="$(head -1 <<<"$body")"
    body="$(tail -n +2 <<<"$body")"

    name_string="$source -> [alias.$name]"

    if [[ "$body" =~ ^'xtool ' ]]
    then
        target="$(echo $body | cut -d' ' -f 2)"
        alias_args="$(echo $body | cut -d' ' -f 3-)"
        file="$($GIT_TOOLS_PATH/xtool --path $target)"
        body="$(\cat "$file")"

        name_string+=" -> $file $alias_args"
    else
        command -v shfmt >/dev/null && body="$(shfmt <<<"$body")"
        bat_args+=( '--language=sh' )
    fi

    if ((_xtool_alias_no_deps)) || ! command -v bat >/dev/null
    then
        reader="$( ((_xtool_alias_print)) && echo 'cat' || echo "${_xtool_pager:-'less'}" )"
        formatter="$($GIT_TOOLS_PATH/xtool --path 'format_page')"
        "$formatter" "$name_string" <<<"$body" | $reader
    else
        bat_args+=( "--file-name=$name_string" )
        ((_xtool_alias_print)) && bat_args+=('--paging=never')

        bat "${bat_args[@]}" <<<"$body"
    fi
done
