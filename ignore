#!/bin/sh

# USAGE: git ignore [--global] [path(s)]
#  adds the specified path to the local .gitignore file
#  if no path is specified, opens .gitignore in the default editor
#     --global
#       acts on the ~/.gitignore_global file instead

_git_ignore_items=()
while (( $# ))
do
    case $1 in
        --ignore-file|-f)
            shift
            _git_ignore_file="$1"
            ;;
        --global|-g)
            _git_ignore_context='--global'
            ;;
        --local|-l)
            _git_ignore_context='--local'
            ;;
        --set-ignore|--configure|-c)
            _git_ignore_apply=1
            ;;
        --help|-h)
            grep '^# USAGE' 'ignore.help'
            exit 0;
            ;;
        --)
            _git_ignore_items+=($@)
            break
            ;;
        *)
            _git_ignore_items+=("$1")
            ;;
    esac
    shift
done

target="${_git_ignore_file:-"$(git config $_git_ignore_context --get core.excludesfile)"}"
if [[ -z "$target" ]]
then
    if [[ "$_git_ignore_context" == '--global' ]]
    then

        target="$HOME/.gitignore_global"
        _git_ignore_apply=1

    elif git rev-parse 2>/dev/null
    then

        target=".gitignore"
        _git_ignore_context=${_git_ignore_context:-'--local'}
        _git_ignore_apply=1

    elif [[ -f '.gitignore' ]]
    then

        target=".gitignore"

    elif [[ -f '.ignore' ]]
    then

        target=".ignore"

    else

        target="$HOME/.gitignore_global"
        _git_ignore_context=${_git_ignore_context:-'--global'}
        _git_ignore_apply=1

    fi
fi
((_git_ignore_apply)) && git config $_git_ignore_context core.excludesfile "$target"

target="$(realpath "$target")";
echo "$target";

if [[ $# -eq 0 ]];
then
    edit="$(git config --get core.editor)";
    edit="${edit:-$EDITOR}";
    edit="${edit:-vim}";
    $edit $target && return;
fi;

grep -qxF '# quick-add' "$target" 2>/dev/null || echo '\n\n# quick-add' >> "$target";

set -f -o noglob;
for arg;
do
    grep -qxF "$arg" "$target" && echo '   '"$arg" && continue;
    echo '+  '"$arg";
    arg="$(printf '%s\n' "$arg" | sed 's:[][\/.^$*]:\\&:g')";
    sed -i '' -e "s/^# quick-add$/# quick-add\n${arg}/" "$target";
done;
